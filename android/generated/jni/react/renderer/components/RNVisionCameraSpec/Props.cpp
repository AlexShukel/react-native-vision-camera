
/**
 * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
 *
 * Do not edit this file as changes may cause incorrect behavior and will be lost
 * once the code is regenerated.
 *
 * @generated by codegen project: GeneratePropsCpp.js
 */

#include "Props.h"
#include <react/renderer/core/PropsParserContext.h>
#include <react/renderer/core/propsConversions.h>

namespace facebook::react {

CameraViewProps::CameraViewProps(
    const PropsParserContext &context,
    const CameraViewProps &sourceProps,
    const RawProps &rawProps): ViewProps(context, sourceProps, rawProps),

    isActive(convertRawProp(context, rawProps, "isActive", sourceProps.isActive, {false})),
    preview(convertRawProp(context, rawProps, "preview", sourceProps.preview, {false})),
    photo(convertRawProp(context, rawProps, "photo", sourceProps.photo, {false})),
    video(convertRawProp(context, rawProps, "video", sourceProps.video, {false})),
    audio(convertRawProp(context, rawProps, "audio", sourceProps.audio, {false})),
    pixelFormat(convertRawProp(context, rawProps, "pixelFormat", sourceProps.pixelFormat, {CameraViewPixelFormat::Yuv})),
    enableLocation(convertRawProp(context, rawProps, "enableLocation", sourceProps.enableLocation, {false})),
    torch(convertRawProp(context, rawProps, "torch", sourceProps.torch, {CameraViewTorch::Off})),
    zoom(convertRawProp(context, rawProps, "zoom", sourceProps.zoom, {0.0})),
    enableZoomGesture(convertRawProp(context, rawProps, "enableZoomGesture", sourceProps.enableZoomGesture, {false})),
    exposure(convertRawProp(context, rawProps, "exposure", sourceProps.exposure, {0.0})),
    format(convertRawProp(context, rawProps, "format", sourceProps.format, {})),
    resizeMode(convertRawProp(context, rawProps, "resizeMode", sourceProps.resizeMode, {CameraViewResizeMode::Cover})),
    androidPreviewViewType(convertRawProp(context, rawProps, "androidPreviewViewType", sourceProps.androidPreviewViewType, {CameraViewAndroidPreviewViewType::SurfaceView})),
    videoHdr(convertRawProp(context, rawProps, "videoHdr", sourceProps.videoHdr, {false})),
    photoHdr(convertRawProp(context, rawProps, "photoHdr", sourceProps.photoHdr, {false})),
    photoQualityBalance(convertRawProp(context, rawProps, "photoQualityBalance", sourceProps.photoQualityBalance, {CameraViewPhotoQualityBalance::Balanced})),
    enableBufferCompression(convertRawProp(context, rawProps, "enableBufferCompression", sourceProps.enableBufferCompression, {false})),
    lowLightBoost(convertRawProp(context, rawProps, "lowLightBoost", sourceProps.lowLightBoost, {false})),
    videoStabilizationMode(convertRawProp(context, rawProps, "videoStabilizationMode", sourceProps.videoStabilizationMode, {CameraViewVideoStabilizationMode::Off})),
    enableDepthData(convertRawProp(context, rawProps, "enableDepthData", sourceProps.enableDepthData, {false})),
    enablePortraitEffectsMatteDelivery(convertRawProp(context, rawProps, "enablePortraitEffectsMatteDelivery", sourceProps.enablePortraitEffectsMatteDelivery, {false})),
    outputOrientation(convertRawProp(context, rawProps, "outputOrientation", sourceProps.outputOrientation, {CameraViewOutputOrientation::Device})),
    isMirrored(convertRawProp(context, rawProps, "isMirrored", sourceProps.isMirrored, {false})),
    cameraId(convertRawProp(context, rawProps, "cameraId", sourceProps.cameraId, {})),
    enableFrameProcessor(convertRawProp(context, rawProps, "enableFrameProcessor", sourceProps.enableFrameProcessor, {false})),
    codeScannerOptions(convertRawProp(context, rawProps, "codeScannerOptions", sourceProps.codeScannerOptions, {})),
    minFps(convertRawProp(context, rawProps, "minFps", sourceProps.minFps, {0.0})),
    maxFps(convertRawProp(context, rawProps, "maxFps", sourceProps.maxFps, {0.0}))
      {}

} // namespace facebook::react
