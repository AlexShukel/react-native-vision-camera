
/**
 * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
 *
 * Do not edit this file as changes may cause incorrect behavior and will be lost
 * once the code is regenerated.
 *
 * @generated by codegen project: GenerateEventEmitterH.js
 */
#pragma once

#include <react/renderer/components/view/ViewEventEmitter.h>


namespace facebook::react {
class CameraViewEventEmitter : public ViewEventEmitter {
 public:
  using ViewEventEmitter::ViewEventEmitter;

  struct OnViewReady {
      
    };

  struct OnAverageFpsChanged {
      double averageFps;
    };

  struct OnInitialized {
      
    };

  struct OnErrorCause {
      int code;
    std::string domain;
    std::string message;
    std::string details;
    std::string stacktrace;
    };

  struct OnError {
      std::string code;
    std::string message;
    OnErrorCause cause;
    };

  struct OnCodeScannedCodesFrame {
      double x;
    double y;
    double width;
    double height;
    };

  struct OnCodeScannedCodesCorners {
      double x;
    double y;
    };

  struct OnCodeScannedCodes {
      std::string type;
    std::string value;
    OnCodeScannedCodesFrame frame;
    std::vector<OnCodeScannedCodesCorners> corners;
    };

  struct OnCodeScannedFrame {
      int width;
    int height;
    };

  struct OnCodeScanned {
      std::vector<OnCodeScannedCodes> codes;
    OnCodeScannedFrame frame;
    };

  struct OnStarted {
      
    };

  struct OnStopped {
      
    };

  struct OnPreviewStarted {
      
    };

  struct OnPreviewStopped {
      
    };

  struct OnShutter {
      std::string type;
    };

  enum class OnOutputOrientationChangedOutputOrientation {
    Portrait,
    PortraitUpsideDown,
    LandscapeLeft,
    LandscapeRight
  };

  static char const *toString(const OnOutputOrientationChangedOutputOrientation value) {
    switch (value) {
      case OnOutputOrientationChangedOutputOrientation::Portrait: return "portrait";
      case OnOutputOrientationChangedOutputOrientation::PortraitUpsideDown: return "portrait-upside-down";
      case OnOutputOrientationChangedOutputOrientation::LandscapeLeft: return "landscape-left";
      case OnOutputOrientationChangedOutputOrientation::LandscapeRight: return "landscape-right";
    }
  }

  struct OnOutputOrientationChanged {
      OnOutputOrientationChangedOutputOrientation outputOrientation;
    };

  enum class OnPreviewOrientationChangedPreviewOrientation {
    Portrait,
    PortraitUpsideDown,
    LandscapeLeft,
    LandscapeRight
  };

  static char const *toString(const OnPreviewOrientationChangedPreviewOrientation value) {
    switch (value) {
      case OnPreviewOrientationChangedPreviewOrientation::Portrait: return "portrait";
      case OnPreviewOrientationChangedPreviewOrientation::PortraitUpsideDown: return "portrait-upside-down";
      case OnPreviewOrientationChangedPreviewOrientation::LandscapeLeft: return "landscape-left";
      case OnPreviewOrientationChangedPreviewOrientation::LandscapeRight: return "landscape-right";
    }
  }

  struct OnPreviewOrientationChanged {
      OnPreviewOrientationChangedPreviewOrientation previewOrientation;
    };
  void onViewReady(OnViewReady value) const;

  void onAverageFpsChanged(OnAverageFpsChanged value) const;

  void onInitialized(OnInitialized value) const;

  void onError(OnError value) const;

  void onCodeScanned(OnCodeScanned value) const;

  void onStarted(OnStarted value) const;

  void onStopped(OnStopped value) const;

  void onPreviewStarted(OnPreviewStarted value) const;

  void onPreviewStopped(OnPreviewStopped value) const;

  void onShutter(OnShutter value) const;

  void onOutputOrientationChanged(OnOutputOrientationChanged value) const;

  void onPreviewOrientationChanged(OnPreviewOrientationChanged value) const;
};
} // namespace facebook::react
